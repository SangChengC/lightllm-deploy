apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lightllm-chart.fullname" . }}
  labels:
    {{- include "lightllm-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lightllm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lightllm-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lightllm-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
              ["python", "-m", "lightllm.server.api_server"]
          args:
            {{- $args := list }}
            {{- $args = append $args "--model" .Values.lightllm.startupArgs.model_dir }}
            {{- $args = append $args "--host" .Values.lightllm.startupArgs.host }}
            {{- $args = append $args "--port" (printf "%d" .Values.lightllm.startupArgs.port) }}
            {{- $args = append $args "--nccl_port" (printf "%d" .Values.lightllm.startupArgs.nccl_port) }}
            {{- $args = append $args "--tp" (printf "%d" .Values.lightllm.startupArgs.tp) }}
            {{- $args = append $args "--max_req_input_len" (printf "%d" .Values.lightllm.startupArgs.max_req_input_len) }}
            {{- $args = append $args "--max_req_total_len" (printf "%d" .Values.lightllm.startupArgs.max_req_total_len) }}
            {{- $args = append $args "--max_total_token_num" (printf "%d" .Values.lightllm.startupArgs.max_total_token_num) }}
            {{- $args = append $args "--tokenizer_mode" .Values.lightllm.startupArgs.tokenizer_mode }}
            {{- if .Values.lightllm.startupArgs.use_dynamic_prompt_cache }}
            {{- $args = append $args "--use_dynamic_prompt_cache" }}
            {{- end }}
            {{- if .Values.lightllm.startupArgs.trust_remote_code }}
            {{- $args = append $args "--trust_remote_code" }}
            {{- end }}
            {{- $args = append $args "--mode" .Values.lightllm.startupArgs.mode }}
            {{- $args = append $args "--data_type" .Values.lightllm.startupArgs.data_type }}
            {{- if .Values.lightllm.additionalArgs }}
            {{- range $arg := splitList " " .Values.lightllm.additionalArgs }}
            {{- $args = append $args $arg }}
            {{- end }}
            {{- end }}
            {{- toYaml $args | nindent 12 }}
          volumeMounts:
            - name: model-data
              mountPath: {{ .Values.modelData.mountPath }}-model-data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
